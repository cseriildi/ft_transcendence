events {}

http {

    server {
        listen 80;
        server_name localhost.localdomain;
        
        # ===== DELETE THIS BLOCK WHEN FRONTEND USES WSS:// =====
        # TEMPORARY: Allow WebSocket connections over plain HTTP to avoid redirect
        # This enables ws://localhost/ws/game to work from HTTPS pages
        location /ws/game {
            proxy_pass http://backend:3001/game;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
        # ===== END DELETE BLOCK =====
        
        # ORIGINAL (restore when deleting above): 
        # return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost.localdomain;

        ssl_certificate     /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/key.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;

        location / {
            proxy_pass http://frontend:4200;
            # ===== DELETE THIS LINE WHEN FRONTEND USES WSS:// =====
            # TEMPORARY: Allow ws:// WebSockets from HTTPS pages until devs update frontend
            add_header Content-Security-Policy "connect-src 'self' ws: wss:;" always;
            # ===== END DELETE =====
        }

        location ~ ^/(api|auth|oauth)/ {
            proxy_pass http://databank:3000/;
        }
        location /game/ {
            proxy_pass http://backend:3001/;
        }

        location /ws/game {
            proxy_pass http://backend:3001/game;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}