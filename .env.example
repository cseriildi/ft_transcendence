# =============================================================================
# ARCHITECTURE OVERVIEW
# =============================================================================
# This application uses a microservices architecture with NGINX as a reverse proxy:
#
# Browser --> NGINX:8443 (TLS/SSL) --> Internal Services
#              ├─ /         --> frontend:4200
#              ├─ /api/     --> databank:3000
#              ├─ /auth/    --> databank:3000
#              ├─ /oauth/   --> databank:3000
#              ├─ /game/    --> backend:3001
#              └─ /ws/game  --> backend:3001 (WebSocket)
#
# All internal service ports are ONLY accessible within the Docker network.
# External access is ONLY through NGINX on the configured NGINX_PORT.
#
# =============================================================================
# Global Application Configuration
# =============================================================================
APP_NAME=ft_transcendence
NODE_ENV=prod

# =============================================================================
# NGINX Reverse Proxy (Public Gateway)
# =============================================================================
# HTTPS port (443 for production, 8443 for school PCs)
NGINX_HTTPS_PORT=8443
# HTTP port - redirects to HTTPS (80 for production, 8080 for school PCs)
NGINX_HTTP_PORT=8080
NGINX_HOST=localhost

# Public URLs (what the browser uses to connect)
# These should match your NGINX_HTTPS_PORT
PUBLIC_API_URL=https://localhost:8443/api
PUBLIC_WS_URL=wss://localhost:8443/ws

# =============================================================================
# Frontend Service (Internal)
# =============================================================================
# Internal port - only accessible within Docker network
FRONTEND_PORT=4200

# =============================================================================
# Backend Database Service (databank - Internal)
# =============================================================================
DATABANK_PORT=3000
DATABANK_HOST=0.0.0.0
DATABANK_DATABASE_PATH=/app/data/database.db

# Route prefixes
AUTH_PREFIX=/auth
OAUTH_PREFIX=/oauth
API_PREFIX=/api

# JWT Configuration
JWT_ISSUER=ping-pong-api
JWT_AUDIENCE=ping-pong-clients
JWT_ACCESS_SECRET=dev-access-secret-change-me
JWT_REFRESH_SECRET=dev-refresh-secret-change-me
JWT_ACCESS_TTL=15m
JWT_REFRESH_TTL=7d

# OAuth Configuration
OAUTH_STATE_SECRET=dev-oauth-state-secret-change-me
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
GITHUB_REDIRECT_URI=http://localhost:3000/oauth/github/callback
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_REDIRECT_URI=http://localhost:3000/oauth/google/callback

# =============================================================================
# Game Logic Service (backend)
# =============================================================================
GAMELOGIC_PORT=3001
GAMELOGIC_HOST=0.0.0.0

# Game Settings
GAME_WIDTH=4000
GAME_HEIGHT=2000
MAX_SCORE=10
BALL_RADIUS=40
BALL_SPEED=40
PADDLE_SPEED=40
PHYSICS_FPS=60
RENDER_FPS=30

# =============================================================================
# Live Chat Service
# =============================================================================
LIVECHAT_PORT=3002
LIVECHAT_HOST=0.0.0.0
LIVECHAT_DATABASE_PATH=/app/data/database.db
AUTH_SERVICE_URL=http://databank:3000

# =============================================================================
# Logging
# =============================================================================
LOG_LEVEL=info

# =============================================================================
# TLS/SSL Configuration
# =============================================================================
TLS_CERT_PATH=./.certs/cert.pem
TLS_KEY_PATH=./.certs/key.pem
TLS_CA_PATH=./.certs/rootCA.pem
